{"version":3,"sources":["webpack://flam/webpack/bootstrap","webpack://flam/./node_modules/bignumber.js/bignumber.js","webpack://flam/./node_modules/number-to-bn/src/index.js","webpack://flam/./node_modules/number-to-bn/node_modules/bn.js/lib/bn.js","webpack://flam/(webpack)/buildin/module.js","webpack://flam/./node_modules/buffer/index.js","webpack://flam/(webpack)/buildin/global.js","webpack://flam/./node_modules/base64-js/index.js","webpack://flam/./node_modules/ieee754/index.js","webpack://flam/./node_modules/isarray/index.js","webpack://flam/./node_modules/strip-hex-prefix/src/index.js","webpack://flam/./node_modules/is-hex-prefixed/src/index.js","webpack://flam/./utils/calculate.js","webpack://flam/./index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","globalObject","BigNumber","isNumeric","mathceil","Math","ceil","mathfloor","floor","bignumberError","tooManyDigits","BASE","POWS_TEN","MAX","bitFloor","coeffToString","a","z","j","length","charCodeAt","slice","compare","x","y","b","xc","yc","k","e","intCheck","min","max","Error","String","isOdd","toExponential","str","charAt","toFixedPoint","len","zs","clone","configObject","div","convertBase","parseNumeric","random53bitInt","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","P","constructor","toString","valueOf","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","prefix","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","v","alphabet","caseChanged","isNum","this","_isBigNumber","test","indexOf","replace","search","substring","round","DEBUG","toUpperCase","toLowerCase","push","format","rm","id","c0","ne","maxOrMin","args","method","normalise","pop","sd","ni","rd","pows10","out","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","set","obj","crypto","getRandomValues","randomBytes","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","arguments","lt","minimum","gt","random","dp","rand","Uint32Array","copy","splice","sum","plus","toBaseOut","baseIn","baseOut","arrL","arr","reverse","sign","callerIsToString","pow","concat","multiply","base","temp","xlo","xhi","carry","klo","khi","aL","bL","cmp","subtract","more","prod","prodL","q","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","NaN","isNaN","p1","p2","absoluteValue","abs","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","isInteger","mod","times","integerValue","isEqualTo","eq","isFinite","isGreaterThan","isGreaterThanOrEqualTo","gte","isLessThan","isLessThanOrEqualTo","lte","isNegative","isPositive","isZero","minus","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","negated","precision","shiftedBy","squareRoot","sqrt","rep","toFixed","toFormat","split","g1","g2","intPart","fractionPart","isNeg","intDigits","substr","RegExp","toFraction","md","d0","d1","d2","exp","n0","n1","toNumber","toPrecision","toJSON","BN","stripHexPrefix","arg","multiplier","formattedString","trim","isHexPrefixed","stringArg","match","mul","JSON","stringify","assert","val","msg","inherits","ctor","superCtor","super_","TempCtor","number","endian","isBN","negative","words","red","_init","Buffer","wordSize","parseHex","start","end","parseBase","num","Array","isArray","left","right","_initNumber","_initArray","_parseHex","_parseBase","strip","toArray","w","off","limbLen","limbPow","total","word","imuln","_iaddn","dest","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","lo","ncarry","rword","maxJ","padding","groupBase","modn","idivn","ret","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","andln","iushrn","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","mulTo","hncarry","bigMulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","bhi","diff","qj","divmod","positive","divn","umod","divRound","dm","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gten","ltn","lten","eqn","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","input","output","outLen","prev","next","mod3","one","nOne","lpow","inv","wnd","current","currentLen","mont","u","webpackPolyfill","deprecate","paths","children","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","Uint8Array","__proto__","encodingOrOffset","allocUnsafe","from","TypeError","ArrayBuffer","array","byteOffset","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","fromString","isBuffer","checked","buffer","type","data","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","buf","readUInt16BE","foundIndex","found","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","utf16leToBytes","fromByteArray","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","list","pos","swap16","swap32","swap64","equals","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","_arr","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","stringtrim","base64clean","src","dst","Function","window","b64","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","log","LN2","integerToDecimal","integer","unit","decimalToInteger","decimal","async","depositFTokenCalculate","amount","symbol","decimals","flamincome","__registry__","vault","normalizer","nTokenContract","__get_normalizer_by_symbol__","accountAddress","__account__","f","methods","price18","fTokenContract","__get_vault_by_symbol__","console","totalSupply","priceE18","error","overfill18","overfillE18","Promise","all","then","vals","amountNum","str10pow18","finall","__init__","web3","Web3","currentProvider","fetch","resp","text","__logo__","catch","err","setTimeout","__abi__","vault_baseline","parse","erc20","weth","normalizer_methane","__ptty__","__speak__","item","root","document","createElement","logo","style","textAlign","backgroundColor","border","justifyContent","alignItems","display","innerText","refresh","$","appendChild","__display__","innerHTML","empty","outerHTML","appendTo","__done__","get_terminal","show","echo","find","focus","__before__","hide","message","__welcome__","welcome","welcome_header","flamingo","height","welcome_logo","welcome_footer","__register__","register","cmd","options","help","last","in","__check_connection__","eth","Contract","__get_erc20_by_symbol__","__get_weth__","__transaction__","tx","on","hash","receipt","ready","Ptty","i18n","get_command_option","privateKey","accounts","privateKeyToAccount","address","ethereum","send","result","filter","head","startsWith","row","href","account","balanceOf","padStart","position","utils","db","getBlockNumber","nl","nr","bl","getBlock","br","duration","timestamp","pl","pr","parseFloat","apy","balances","balance","allowance","_address","repeat","padEnd","approve","deposit","withdraw","fTokenCalculate","RealizeFToken","getBalance","UnrealizeFToken"],"mappings":"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","file":"flamincome-finance.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.0.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                    // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if less than two characters,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '5e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","var BN = require('bn.js');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Returns a BN object, converts a number value to a BN\n * @param {String|Number|Object} `arg` input a string number, hex string number, number, BigNumber or BN object\n * @return {Object} `output` BN object of the number\n * @throws if the argument is not an array, object that isn't a bignumber, not a string number or number\n */\nmodule.exports = function numberToBN(arg) {\n  if (typeof arg === 'string' || typeof arg === 'number') {\n    var multiplier = new BN(1); // eslint-disable-line\n    var formattedString = String(arg).toLowerCase().trim();\n    var isHexPrefixed = formattedString.substr(0, 2) === '0x' || formattedString.substr(0, 3) === '-0x';\n    var stringArg = stripHexPrefix(formattedString); // eslint-disable-line\n    if (stringArg.substr(0, 1) === '-') {\n      stringArg = stripHexPrefix(stringArg.slice(1));\n      multiplier = new BN(-1, 10);\n    }\n    stringArg = stringArg === '' ? '0' : stringArg;\n\n    if ((!stringArg.match(/^-?[0-9]+$/) && stringArg.match(/^[0-9A-Fa-f]+$/))\n      || stringArg.match(/^[a-fA-F]+$/)\n      || (isHexPrefixed === true && stringArg.match(/^[0-9A-Fa-f]+$/))) {\n      return new BN(stringArg, 16).mul(multiplier);\n    }\n\n    if ((stringArg.match(/^-?[0-9]+$/) || stringArg === '') && isHexPrefixed === false) {\n      return new BN(stringArg, 10).mul(multiplier);\n    }\n  } else if (typeof arg === 'object' && arg.toString && (!arg.pop && !arg.push)) {\n    if (arg.toString(10).match(/^-?[0-9]+$/) && (arg.mul || arg.dividedToIntegerBy)) {\n      return new BN(arg.toString(10), 10);\n    }\n  }\n\n  throw new Error('[number-to-bn] while converting number ' + JSON.stringify(arg) + ' to BN.js instance, error: invalid number value. Value must be an integer, hex string, BN or BigNumber instance. Note, decimals are not supported.');\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buf' + 'fer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","var isHexPrefixed = require('is-hex-prefixed');\n\n/**\n * Removes '0x' from a given `String` is present\n * @param {String} str the string value\n * @return {String|Optional} a string by pass if necessary\n */\nmodule.exports = function stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n","/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n}\n","import BigNumber from \"bignumber.js\"\r\nimport numberToBN from \"number-to-bn\"\r\n\r\nconst COEFFICIENT_OF_FRICTION = 1.005\r\n\r\nexport function integerToDecimal(integer, unit) {\r\n\tif (new BigNumber(integer).isNaN()) {\r\n\t\treturn null\r\n\t}\r\n\treturn new BigNumber(integer).shiftedBy(-unit).toString()\r\n}\r\n\r\nexport function decimalToInteger(decimal, unit) {\r\n\tif (new BigNumber(decimal).isNaN()) {\r\n\t\treturn null\r\n\t}\r\n\treturn numberToBN(new BigNumber(decimal).shiftedBy(unit).dp(0)).toString()\r\n}\r\n\r\nasync function priceE18(symbol) {\r\n\ttry {\r\n\t\tconst fTokenContract = flamincome.__get_vault_by_symbol__(symbol)\r\n\t\tconsole.log(\"fTokenContract is \")\r\n\t\tconsole.log(fTokenContract)\r\n\t\tconst totalSupply = await fTokenContract.methods.totalSupply().call()\r\n\t\tif (totalSupply <= 0) return new BigNumber((1e18).toString())\r\n\t\treturn await fTokenContract.methods.priceE18().call()\r\n\t} catch (error) {\r\n\t\tconsole.log(error)\r\n\t\treturn new BigNumber((1e18).toString()).toString()\r\n\t}\r\n}\r\n\r\nasync function overfillE18(symbol) {\r\n\ttry {\r\n\t\tconst nTokenContract = flamincome.__get_normalizer_by_symbol__(symbol)\r\n\t\treturn await nTokenContract.methods.overfillE18().call()\r\n\t} catch (error) {\r\n\t\treturn 0\r\n\t}\r\n}\r\n\r\nexport async function depositFTokenCalculate({ amount, symbol, decimals }) {\r\n\ttry {\r\n\t\tconst fTokenHash = flamincome.__registry__.vault[symbol]\r\n\t\tconst nTokenHash = flamincome.__registry__.normalizer[symbol]\r\n\t\tconst nTokenContract = flamincome.__get_normalizer_by_symbol__(symbol)\r\n\t\tconst accountAddress = flamincome.__account__\r\n\t\tlet f = nTokenContract.methods.f(accountAddress).call()\r\n\t\tlet n = nTokenContract.methods.n(accountAddress).call()\r\n\t\tlet price18 = priceE18(symbol)\r\n\t\tlet overfill18 = overfillE18(symbol)\r\n\t\tconsole.log(\"离谱\")\r\n\t\tawait new Promise((res) => {\r\n\t\t\t// f = 0\r\n\t\t\t// n = 0\r\n\t\t\t// price18 = (1e18).toString()\r\n\t\t\t// overfill18 = 0\r\n\t\t\t// res()\r\n\t\t\tPromise.all([f, n, price18, overfill18]).then((vals) => {\r\n\t\t\t\tconsole.log(\"vals is \")\r\n\t\t\t\tconsole.log(vals)\r\n\t\t\t\tf = vals[0]\r\n\t\t\t\tn = vals[1]\r\n\t\t\t\tprice18 = vals[2]\r\n\t\t\t\toverfill18 = vals[3]\r\n\t\t\t\tres()\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\tconsole.log(\"真离谱\")\r\n\t\tconsole.log(\"amount is\")\r\n\t\tconsole.log(amount)\r\n\t\tconsole.log(\"decimals is \")\r\n\t\tconsole.log(decimals)\r\n\t\tamount = amount.toString()\r\n\t\tconst amountNum = new BigNumber(amount)\r\n\t\tconsole.log(\"amountNum is\")\r\n\t\tconsole.log(amountNum.toString())\r\n\t\tconst str10pow18 = (1e18).toString()\r\n\t\tconst left = amountNum\r\n\t\t\t.plus(new BigNumber(f))\r\n\t\t\t.multipliedBy(new BigNumber(price18))\r\n\t\t\t.div(new BigNumber(str10pow18))\r\n\t\t\t.div(new BigNumber(COEFFICIENT_OF_FRICTION))\r\n\t\tconst right = new BigNumber(str10pow18)\r\n\t\t\t.minus(new BigNumber(overfill18))\r\n\t\t\t.div(new BigNumber(str10pow18))\r\n\t\tlet finall = left\r\n\t\t\t.multipliedBy(right)\r\n\t\t\t.minus(new BigNumber(n))\r\n\t\t\t.integerValue(1)\r\n\t\tfinall = BigNumber.maximum(finall, 0)\r\n\t\tconsole.log(\"last value is \")\r\n\t\tconsole.log(\r\n\t\t\tnew BigNumber(\r\n\t\t\t\tintegerToDecimal(finall.toFixed(decimals), decimals)\r\n\t\t\t).toFixed(decimals, 1)\r\n\t\t)\r\n\t\treturn new BigNumber(\r\n\t\t\tintegerToDecimal(finall.toFixed(decimals), decimals)\r\n\t\t).toFixed(decimals, 1)\r\n\t} catch (error) {\r\n\t\treturn 0\r\n\t}\r\n}\r\n","import { depositFTokenCalculate, decimalToInteger } from \"./utils/calculate\"\n\nwindow.flamincome = {\n\t__init__: function () {\n\t\ttry {\n\t\t\twindow.web3 = new Web3(web3.currentProvider)\n\t\t} catch {}\n\t\tfetch(\"https://cdn.jsdelivr.net/gh/flamincome/logo/flamincome\")\n\t\t\t.then((resp) => resp.text())\n\t\t\t.then((text) => {\n\t\t\t\tflamincome.__logo__ = text\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t\tsetTimeout(flamincome.__init__, 1000)\n\t\t\t})\n\t\tfetch(\n\t\t\t\"https://cdn.jsdelivr.net/gh/flamincome/registry/abi/vault.baseline.json\"\n\t\t)\n\t\t\t.then((resp) => resp.text())\n\t\t\t.then((text) => {\n\t\t\t\tflamincome.__abi__.vault_baseline = JSON.parse(text)\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t\tsetTimeout(flamincome.__init__, 1000)\n\t\t\t})\n\t\tfetch(\"https://cdn.jsdelivr.net/gh/flamincome/registry/abi/erc20.json\")\n\t\t\t.then((resp) => resp.text())\n\t\t\t.then((text) => {\n\t\t\t\tflamincome.__abi__.erc20 = JSON.parse(text)\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t\tsetTimeout(flamincome.__init__, 1000)\n\t\t\t})\n\t\tfetch(\"https://cdn.jsdelivr.net/gh/flamincome/registry/abi/weth.json\")\n\t\t\t.then((resp) => resp.text())\n\t\t\t.then((text) => {\n\t\t\t\tflamincome.__abi__.weth = JSON.parse(text)\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t\tsetTimeout(flamincome.__init__, 1000)\n\t\t\t})\n\t\tfetch(\n\t\t\t\"https://cdn.jsdelivr.net/gh/flamincome/registry/abi/normalizer.methane.json\"\n\t\t)\n\t\t\t.then((resp) => resp.text())\n\t\t\t.then((text) => {\n\t\t\t\tflamincome.__abi__.normalizer_methane = JSON.parse(text)\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t\tsetTimeout(flamincome.__init__, 1000)\n\t\t\t})\n\t\tfetch(\"https://cdn.jsdelivr.net/gh/flamincome/registry/address/erc20.json\")\n\t\t\t.then((resp) => resp.text())\n\t\t\t.then((text) => {\n\t\t\t\tflamincome.__registry__.erc20 = JSON.parse(text)\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t\tsetTimeout(flamincome.__init__, 1000)\n\t\t\t})\n\t\tfetch(\"https://cdn.jsdelivr.net/gh/flamincome/registry/address/vault.json\")\n\t\t\t.then((resp) => resp.text())\n\t\t\t.then((text) => {\n\t\t\t\tflamincome.__registry__.vault = JSON.parse(text)\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t\tsetTimeout(flamincome.__init__, 1000)\n\t\t\t})\n\t\tfetch(\n\t\t\t\"https://cdn.jsdelivr.net/gh/flamincome/registry/address/normalizer.json\"\n\t\t)\n\t\t\t.then((resp) => resp.text())\n\t\t\t.then((text) => {\n\t\t\t\tflamincome.__registry__.normalizer = JSON.parse(text)\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t\tsetTimeout(flamincome.__init__, 1000)\n\t\t\t})\n\t},\n\t__ptty__: null,\n\t__abi__: {},\n\t__registry__: {},\n\t__logo__: \"\",\n\t__account__: null,\n\t__speak__: function (item) {\n\t\tlet root = document.createElement(\"div\")\n\t\tlet logo = document.createElement(\"pre\")\n\t\tlogo.style.textAlign = \"center\"\n\t\tlogo.style.backgroundColor = \"transparent\"\n\t\tlogo.style.border = \"0px\"\n\t\troot.style.justifyContent = \"center\"\n\t\troot.style.alignItems = \"center\"\n\t\troot.style.display = \"flex\"\n\t\troot.style.backgroundColor = \"rgba(0,0,0,0.9)\"\n\t\troot.style.border = \"1px solid rgba(255,255,255,0.15)\"\n\t\tlogo.id = Math.random().toFixed(50).substr(2)\n\t\tlogo.innerText = flamincome.__logo__\n\t\tlet refresh = function () {\n\t\t\tif (flamincome.__logo__.length == 0) {\n\t\t\t\t$(`#${logo.id}`).text(\"loading ...\")\n\t\t\t\tlogo.innerText = \"loading ...\"\n\t\t\t\tsetTimeout(refresh, 1000)\n\t\t\t} else {\n\t\t\t\t$(`#${logo.id}`).text(flamincome.__logo__)\n\t\t\t}\n\t\t}\n\t\trefresh()\n\t\troot.appendChild(logo)\n\t\tif (item) {\n\t\t\troot.appendChild(item)\n\t\t}\n\t\treturn root\n\t},\n\t__display__: function (data) {\n\t\tlet out = document.createElement(\"div\")\n\t\tout.innerHTML = data\n\t\t$(\".content .cmd_out:last\").empty()\n\t\t$(out.outerHTML).appendTo(\".content .cmd_out:last\")\n\t},\n\t__done__: function () {\n\t\tflamincome.__ptty__.get_terminal(\".prompt\").show()\n\t\tflamincome.__ptty__.echo()\n\t\tflamincome.__ptty__.get_terminal(\".prompt\").find(\".input\").focus()\n\t},\n\t__before__: function (f) {\n\t\tflamincome.__ptty__.get_terminal(\".prompt\").hide()\n\t\tif (flamincome.__registry__.erc20 == null) {\n\t\t\tflamincome.__display__(\"loading registry.erc20 ...\")\n\t\t\tsetTimeout(() => flamincome.__before__(f), 1000)\n\t\t\treturn\n\t\t}\n\t\tif (flamincome.__registry__.vault == null) {\n\t\t\tflamincome.__display__(\"loading registry.vault ...\")\n\t\t\tsetTimeout(() => flamincome.__before__(f), 1000)\n\t\t\treturn\n\t\t}\n\t\tif (flamincome.__registry__.normalizer == null) {\n\t\t\tflamincome.__display__(\"loading registry.normalizer ...\")\n\t\t\tsetTimeout(() => flamincome.__before__(f), 1000)\n\t\t\treturn\n\t\t}\n\t\tif (flamincome.__abi__.erc20 == null) {\n\t\t\tflamincome.__display__(\"loading abi.erc20 ...\")\n\t\t\tsetTimeout(() => flamincome.__before__(f), 1000)\n\t\t\treturn\n\t\t}\n\t\tif (flamincome.__abi__.vault_baseline == null) {\n\t\t\tflamincome.__display__(\"loading abi.vault_baseline ...\")\n\t\t\tsetTimeout(() => flamincome.__before__(f), 1000)\n\t\t\treturn\n\t\t}\n\t\tif (flamincome.__abi__.weth == null) {\n\t\t\tflamincome.__display__(\"loading abi.weth ...\")\n\t\t\tsetTimeout(() => flamincome.__before__(f), 1000)\n\t\t\treturn\n\t\t}\n\t\ttry {\n\t\t\tf()\n\t\t} catch (err) {\n\t\t\tflamincome.__display__(err.message)\n\t\t\tflamincome.__done__()\n\t\t}\n\t},\n\t__welcome__: function () {\n\t\tlet welcome = document.createElement(\"div\")\n\t\tlet welcome_header = document.createElement(\"p\")\n\t\tlet div = document.createElement(\"div\")\n\t\tlet flamingo = document.createElement(\"img\")\n\t\tlet text = document.createElement(\"p\")\n\t\ttext.innerText = \"e aí beleza    \"\n\t\ttext.style.height = flamingo.height\n\t\ttext.style.display = \"inline\"\n\t\tflamingo.src = \"https://flamingo.finance/favicon.ico\"\n\t\tflamingo.style.width = \"25px\"\n\t\tdiv.appendChild(text)\n\t\tdiv.appendChild(flamingo)\n\t\tlet welcome_logo = flamincome.__speak__(div)\n\t\tlet welcome_footer = document.createElement(\"p\")\n\t\twelcome_header.style.textAlign = \"center\"\n\t\twelcome_footer.style.textAlign = \"center\"\n\t\twelcome_header.innerHTML = \"welcome to <b>flamincome</b>\"\n\t\twelcome_footer.innerHTML =\n\t\t\t'terminal UI is in beta; <a href=\"https://docs.flamincome.finance\">docs</a> is in beta; ensure risks before operations <br><b>USE AT YOUR OWN RISK!!!</b>'\n\t\twelcome.appendChild(welcome_header)\n\t\twelcome.appendChild(welcome_logo)\n\t\twelcome.appendChild(welcome_footer)\n\t\treturn welcome\n\t},\n\t__register__: function (n, h, f) {\n\t\tflamincome.__ptty__.register(\"command\", {\n\t\t\tname: n,\n\t\t\tmethod: function (cmd) {\n\t\t\t\tcmd.out = \"...\"\n\t\t\t\treturn cmd\n\t\t\t},\n\t\t\toptions: [0, 1, 2, 3, 4],\n\t\t\thelp: h,\n\t\t})\n\t\tflamincome.__ptty__.register(\"callback\", {\n\t\t\tname: n,\n\t\t\tmethod: function (cmd) {\n\t\t\t\tif (cmd.last != undefined || cmd.in != undefined) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tf(cmd)\n\t\t\t},\n\t\t})\n\t},\n\t__check_connection__: function () {\n\t\tif (!flamincome.__account__) {\n\t\t\tthrow { message: \"please <b>connect-wallet</b> first\" }\n\t\t}\n\t},\n\t__get_vault_by_symbol__: function (symbol) {\n\t\tlet vault = flamincome.__registry__.vault[symbol]\n\t\tif (!vault) {\n\t\t\tthrow { message: `canout find registry '${symbol}'` }\n\t\t}\n\t\treturn new web3.eth.Contract(flamincome.__abi__.vault_baseline, vault)\n\t},\n\t__get_normalizer_by_symbol__: function (symbol) {\n\t\tlet normalizer = flamincome.__registry__.normalizer[symbol]\n\t\tif (!normalizer) {\n\t\t\tthrow { message: `canout find registry '${symbol}'` }\n\t\t}\n\t\treturn new web3.eth.Contract(\n\t\t\tflamincome.__abi__.normalizer_methane,\n\t\t\tnormalizer\n\t\t)\n\t},\n\t__get_erc20_by_symbol__: function (symbol) {\n\t\tlet erc20 = flamincome.__registry__.erc20[symbol]\n\t\tif (!erc20) {\n\t\t\tthrow { message: `canout find registry '${symbol}'` }\n\t\t}\n\t\treturn new web3.eth.Contract(flamincome.__abi__.erc20, erc20)\n\t},\n\t__get_weth__: function () {\n\t\tlet erc20 = flamincome.__registry__.erc20[\"WETH\"]\n\t\tif (!erc20) {\n\t\t\tthrow { message: `canout find registry 'WETH'` }\n\t\t}\n\t\treturn new web3.eth.Contract(flamincome.__abi__.weth, erc20)\n\t},\n\t__transaction__: function (tx, next) {\n\t\ttx.on(\"transactionHash\", function (hash) {\n\t\t\tflamincome.__display__(`waiting for confirming ...<br>${hash}`)\n\t\t})\n\t\t\t.on(\"receipt\", function (receipt) {\n\t\t\t\tflamincome.__display__(JSON.stringify(receipt))\n\t\t\t\tif (next) {\n\t\t\t\t\tnext()\n\t\t\t\t} else {\n\t\t\t\t\tflamincome.__done__()\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on(\"error\", function (err) {\n\t\t\t\tflamincome.__display__(err.message)\n\t\t\t\tflamincome.__done__()\n\t\t\t})\n\t},\n}\n$(document).ready(function () {\n\tflamincome.__init__()\n\tflamincome.__ptty__ = $(\"#terminal\").Ptty({\n\t\ti18n: {\n\t\t\twelcome: flamincome.__welcome__().outerHTML,\n\t\t},\n\t})\n\tflamincome.__register__(\"flamincome:\", \"flamincome can speak\", (cmd) => {\n\t\tflamincome.__before__(() => {\n\t\t\tlet args = flamincome.__ptty__.get_command_option(\"last\").split(\" \")\n\t\t\targs.shift()\n\t\t\tlet p = document.createElement(\"p\")\n\t\t\tp.innerText = args.join(\" \")\n\t\t\tlet out = flamincome.__speak__(p)\n\t\t\tflamincome.__display__(out.outerHTML)\n\t\t\tflamincome.__done__()\n\t\t})\n\t})\n\tflamincome.__register__(\"connect-wallet\", \"connect wallet\", (cmd) => {\n\t\tflamincome.__before__(() => {\n\t\t\tif (cmd[1]) {\n\t\t\t\t// with private\n\t\t\t\tconst privateKey = cmd[1]\n\t\t\t\tflamincome.__account__ = web3.eth.accounts.privateKeyToAccount(\n\t\t\t\t\tprivateKey\n\t\t\t\t).address\n\t\t\t\tconsole.log(privateKey)\n\t\t\t\tflamincome.__display__(\"connected\")\n\t\t\t\tflamincome.__done__()\n\t\t\t\treturn\n\t\t\t}\n\t\t\twindow.ethereum\n\t\t\t\t.send(\"eth_requestAccounts\")\n\t\t\t\t.then((v) => {\n\t\t\t\t\tflamincome.__account__ = v.result[0]\n\t\t\t\t\tflamincome.__display__(\"connected\")\n\t\t\t\t\tflamincome.__done__()\n\t\t\t\t})\n\t\t\t\t.catch((v) => {\n\t\t\t\t\tflamincome.__display__(\n\t\t\t\t\t\t`${v.message} (maybe you need to install <a href=\"https://metamask.io/\">metamask</a> for your browser and refresh this page)`\n\t\t\t\t\t)\n\t\t\t\t\tflamincome.__done__()\n\t\t\t\t})\n\t\t})\n\t})\n\tflamincome.__register__(\n\t\t\"list-registry-of-erc20s\",\n\t\t\"list registry of supported erc20s\",\n\t\t(cmd) => {\n\t\t\tflamincome.__before__(() => {\n\t\t\t\tlet filter = \"\"\n\t\t\t\tlet out = document.createElement(\"table\")\n\t\t\t\tlet head = document.createElement(\"tr\")\n\t\t\t\tlet name = document.createElement(\"th\")\n\t\t\t\tlet address = document.createElement(\"th\")\n\t\t\t\thead.appendChild(name)\n\t\t\t\thead.appendChild(address)\n\t\t\t\tout.appendChild(head)\n\t\t\t\tname.innerText = \"contract name\"\n\t\t\t\taddress.innerText = \"contract address\"\n\t\t\t\tif (cmd[1]) {\n\t\t\t\t\tfilter = cmd[1]\n\t\t\t\t}\n\t\t\t\tfor (var k in flamincome.__registry__.erc20) {\n\t\t\t\t\tif (!k.startsWith(filter)) {\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\t\t\t\t\tlet row = document.createElement(\"tr\")\n\t\t\t\t\tlet name = document.createElement(\"th\")\n\t\t\t\t\tlet address = document.createElement(\"th\")\n\t\t\t\t\tlet a = document.createElement(\"a\")\n\t\t\t\t\ta.href = `https://etherscan.io/token/${flamincome.__registry__.erc20[k]}`\n\t\t\t\t\ta.innerText = flamincome.__registry__.erc20[k]\n\t\t\t\t\trow.appendChild(name)\n\t\t\t\t\trow.appendChild(address)\n\t\t\t\t\tout.appendChild(row)\n\t\t\t\t\tname.innerText = k\n\t\t\t\t\taddress.appendChild(a)\n\t\t\t\t}\n\t\t\t\tflamincome.__display__(out.outerHTML)\n\t\t\t\tflamincome.__done__()\n\t\t\t})\n\t\t}\n\t)\n\tflamincome.__register__(\n\t\t\"list-registry-of-vaults\",\n\t\t\"list registry of vaults\",\n\t\t(cmd) => {\n\t\t\tflamincome.__before__(() => {\n\t\t\t\tlet filter = \"\"\n\t\t\t\tlet out = document.createElement(\"table\")\n\t\t\t\tlet head = document.createElement(\"tr\")\n\t\t\t\tlet name = document.createElement(\"th\")\n\t\t\t\tlet address = document.createElement(\"th\")\n\t\t\t\thead.appendChild(name)\n\t\t\t\thead.appendChild(address)\n\t\t\t\tout.appendChild(head)\n\t\t\t\tname.innerText = \"contract name\"\n\t\t\t\taddress.innerText = \"contract address\"\n\t\t\t\tif (cmd[1]) {\n\t\t\t\t\tfilter = cmd[1]\n\t\t\t\t}\n\t\t\t\tfor (var k in flamincome.__registry__.vault) {\n\t\t\t\t\tif (!k.startsWith(filter)) {\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\t\t\t\t\tlet row = document.createElement(\"tr\")\n\t\t\t\t\tlet name = document.createElement(\"th\")\n\t\t\t\t\tlet address = document.createElement(\"th\")\n\t\t\t\t\tlet a = document.createElement(\"a\")\n\t\t\t\t\ta.href = `https://etherscan.io/token/${flamincome.__registry__.vault[k]}`\n\t\t\t\t\ta.innerText = flamincome.__registry__.vault[k]\n\t\t\t\t\trow.appendChild(name)\n\t\t\t\t\trow.appendChild(address)\n\t\t\t\t\tout.appendChild(row)\n\t\t\t\t\tname.innerText = `f${k} (vault of ${k})`\n\t\t\t\t\taddress.appendChild(a)\n\t\t\t\t}\n\t\t\t\tflamincome.__display__(out.outerHTML)\n\t\t\t\tflamincome.__done__()\n\t\t\t})\n\t\t}\n\t)\n\tflamincome.__register__(\n\t\t\"list-registry-of-normalizers\",\n\t\t\"list registry of normalizers\",\n\t\t(cmd) => {\n\t\t\tflamincome.__before__(() => {\n\t\t\t\tlet filter = \"\"\n\t\t\t\tlet out = document.createElement(\"table\")\n\t\t\t\tlet head = document.createElement(\"tr\")\n\t\t\t\tlet name = document.createElement(\"th\")\n\t\t\t\tlet address = document.createElement(\"th\")\n\t\t\t\thead.appendChild(name)\n\t\t\t\thead.appendChild(address)\n\t\t\t\tout.appendChild(head)\n\t\t\t\tname.innerText = \"contract name\"\n\t\t\t\taddress.innerText = \"contract address\"\n\t\t\t\tif (cmd[1]) {\n\t\t\t\t\tfilter = cmd[1]\n\t\t\t\t}\n\t\t\t\tfor (var k in flamincome.__registry__.normalizer) {\n\t\t\t\t\tif (!k.startsWith(filter)) {\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\t\t\t\t\tlet row = document.createElement(\"tr\")\n\t\t\t\t\tlet name = document.createElement(\"th\")\n\t\t\t\t\tlet address = document.createElement(\"th\")\n\t\t\t\t\tlet a = document.createElement(\"a\")\n\t\t\t\t\ta.href = `https://etherscan.io/token/${flamincome.__registry__.normalizer[k]}`\n\t\t\t\t\ta.innerText = flamincome.__registry__.normalizer[k]\n\t\t\t\t\trow.appendChild(name)\n\t\t\t\t\trow.appendChild(address)\n\t\t\t\t\tout.appendChild(row)\n\t\t\t\t\tname.innerText = `n${k} (normalizer of ${k})`\n\t\t\t\t\taddress.appendChild(a)\n\t\t\t\t}\n\t\t\t\tflamincome.__display__(out.outerHTML)\n\t\t\t\tflamincome.__done__()\n\t\t\t})\n\t\t}\n\t)\n\tflamincome.__register__(\n\t\t\"get-balance-of-ftoken-by-symbol\",\n\t\t\"get flamincomed token balance\",\n\t\t(cmd) => {\n\t\t\tflamincome.__before__(() => {\n\t\t\t\tflamincome.__check_connection__()\n\t\t\t\tlet vault = flamincome.__get_vault_by_symbol__(cmd[1])\n\t\t\t\tlet account = cmd[2]\n\t\t\t\tif (!account) {\n\t\t\t\t\taccount = flamincome.__account__\n\t\t\t\t}\n\t\t\t\tlet balanceOf = vault.methods.balanceOf(account).call()\n\t\t\t\tlet decimals = vault.methods.decimals().call()\n\t\t\t\tPromise.all([balanceOf, decimals])\n\t\t\t\t\t.then((vals) => {\n\t\t\t\t\t\tlet balanceOf = vals[0]\n\t\t\t\t\t\tlet decimals = parseInt(vals[1])\n\t\t\t\t\t\tbalanceOf = balanceOf.padStart(decimals, \"0\")\n\t\t\t\t\t\tlet position = balanceOf.length - decimals\n\t\t\t\t\t\tvar output = [\n\t\t\t\t\t\t\tbalanceOf.slice(0, position),\n\t\t\t\t\t\t\tbalanceOf.slice(position),\n\t\t\t\t\t\t].join(\".\")\n\t\t\t\t\t\tflamincome.__display__(output)\n\t\t\t\t\t\tflamincome.__done__()\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tflamincome.__display__(err.message)\n\t\t\t\t\t\tflamincome.__done__()\n\t\t\t\t\t})\n\t\t\t})\n\t\t}\n\t)\n\tflamincome.__register__(\n\t\t\"get-value-of-ftoken-by-symbol\",\n\t\t\"get underlying value of an account\",\n\t\t(cmd) => {\n\t\t\tflamincome.__before__(() => {\n\t\t\t\tflamincome.__check_connection__()\n\t\t\t\tlet symbol = cmd[1]\n\t\t\t\tlet vault = flamincome.__get_vault_by_symbol__(symbol)\n\t\t\t\tlet account = cmd[2]\n\t\t\t\tif (!account) {\n\t\t\t\t\taccount = flamincome.__account__\n\t\t\t\t}\n\t\t\t\tlet balanceOf = vault.methods.balanceOf(account).call()\n\t\t\t\tlet decimals = vault.methods.decimals().call()\n\t\t\t\tlet priceE18 = vault.methods.priceE18().call()\n\t\t\t\tPromise.all([balanceOf, decimals, priceE18])\n\t\t\t\t\t.then((vals) => {\n\t\t\t\t\t\tlet balanceOf = new web3.utils.BN(vals[0])\n\t\t\t\t\t\tlet priceE18 = new web3.utils.BN(vals[2])\n\t\t\t\t\t\tbalanceOf = balanceOf\n\t\t\t\t\t\t\t.mul(priceE18)\n\t\t\t\t\t\t\t.div(new web3.utils.BN(\"1000000000000000000\"))\n\t\t\t\t\t\tbalanceOf = balanceOf.toString()\n\t\t\t\t\t\tlet decimals = parseInt(vals[1])\n\t\t\t\t\t\tbalanceOf = balanceOf.padStart(decimals, \"0\")\n\t\t\t\t\t\tlet position = balanceOf.length - decimals\n\t\t\t\t\t\tvar output = [\n\t\t\t\t\t\t\tbalanceOf.slice(0, position),\n\t\t\t\t\t\t\tbalanceOf.slice(position),\n\t\t\t\t\t\t].join(\".\")\n\t\t\t\t\t\tflamincome.__display__(`${output} ${symbol}`)\n\t\t\t\t\t\tflamincome.__done__()\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tflamincome.__display__(err.message)\n\t\t\t\t\t\tflamincome.__done__()\n\t\t\t\t\t})\n\t\t\t})\n\t\t}\n\t)\n\tflamincome.__register__(\n\t\t\"get-apy-of-ftoken-by-symbol\",\n\t\t\"get apy of a vault\",\n\t\t(cmd) => {\n\t\t\tflamincome.__before__(() => {\n\t\t\t\tflamincome.__check_connection__()\n\t\t\t\tlet symbol = cmd[1]\n\t\t\t\tlet db = cmd[2]\n\t\t\t\tif (!db) {\n\t\t\t\t\tdb = 10000\n\t\t\t\t}\n\t\t\t\tlet vault = flamincome.__get_vault_by_symbol__(symbol)\n\t\t\t\tweb3.eth.getBlockNumber().then((num) => {\n\t\t\t\t\tlet nl = num - db\n\t\t\t\t\tlet nr = num\n\t\t\t\t\tlet bl = web3.eth.getBlock(nl)\n\t\t\t\t\tlet br = web3.eth.getBlock(nr)\n\t\t\t\t\tPromise.all([bl, br]).then(([bl, br]) => {\n\t\t\t\t\t\tlet duration = br.timestamp - bl.timestamp\n\t\t\t\t\t\tlet pl = vault.methods.priceE18().call({}, nl)\n\t\t\t\t\t\tlet pr = vault.methods.priceE18().call({}, nr)\n\t\t\t\t\t\tPromise.all([pl, pr]).then(([pl, pr]) => {\n\t\t\t\t\t\t\tpl = parseFloat(pl)\n\t\t\t\t\t\t\tpr = parseFloat(pr)\n\t\t\t\t\t\t\tlet apy = (\n\t\t\t\t\t\t\t\t((pr / pl) ** (31557600 / duration) - 1) *\n\t\t\t\t\t\t\t\t100\n\t\t\t\t\t\t\t).toFixed(2)\n\t\t\t\t\t\t\tflamincome.__display__(`${apy} %`)\n\t\t\t\t\t\t\tflamincome.__done__()\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t)\n\tflamincome.__register__(\n\t\t\"get-totalvalue-of-ftoken-by-symbol\",\n\t\t\"get total value of flamincomed token\",\n\t\t(cmd) => {\n\t\t\tflamincome.__before__(() => {\n\t\t\t\tflamincome.__check_connection__()\n\t\t\t\tlet symbol = cmd[1]\n\t\t\t\tlet vault = flamincome.__get_vault_by_symbol__(symbol)\n\t\t\t\tlet balances = vault.methods.balance().call()\n\t\t\t\tlet decimals = vault.methods.decimals().call()\n\t\t\t\tPromise.all([balances, decimals])\n\t\t\t\t\t.then((vals) => {\n\t\t\t\t\t\tlet balances = vals[0]\n\t\t\t\t\t\tlet decimals = parseInt(vals[1])\n\t\t\t\t\t\tbalances = balances.padStart(decimals, \"0\")\n\t\t\t\t\t\tlet position = balances.length - decimals\n\t\t\t\t\t\tvar output = [\n\t\t\t\t\t\t\tbalances.slice(0, position),\n\t\t\t\t\t\t\tbalances.slice(position),\n\t\t\t\t\t\t].join(\".\")\n\t\t\t\t\t\tflamincome.__display__(`${output} ${symbol}`)\n\t\t\t\t\t\tflamincome.__done__()\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tflamincome.__display__(err.message)\n\t\t\t\t\t\tflamincome.__done__()\n\t\t\t\t\t})\n\t\t\t})\n\t\t}\n\t)\n\tflamincome.__register__(\n\t\t\"get-price-of-ftoken-by-symbol\",\n\t\t\"get price per share of flamincomed token\",\n\t\t(cmd) => {\n\t\t\tflamincome.__before__(() => {\n\t\t\t\tflamincome.__check_connection__()\n\t\t\t\tlet symbol = cmd[1]\n\t\t\t\tlet vault = flamincome.__get_vault_by_symbol__(symbol)\n\t\t\t\tlet priceE18 = vault.methods.priceE18().call()\n\t\t\t\tPromise.all([priceE18])\n\t\t\t\t\t.then((vals) => {\n\t\t\t\t\t\tlet priceE18 = vals[0].padStart(18, \"0\")\n\t\t\t\t\t\tlet position = priceE18.length - 18\n\t\t\t\t\t\tvar output = [\n\t\t\t\t\t\t\tpriceE18.slice(0, position),\n\t\t\t\t\t\t\tpriceE18.slice(position),\n\t\t\t\t\t\t].join(\".\")\n\t\t\t\t\t\tflamincome.__display__(`${output} ${symbol}`)\n\t\t\t\t\t\tflamincome.__done__()\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tflamincome.__display__(err.message)\n\t\t\t\t\t\tflamincome.__done__()\n\t\t\t\t\t})\n\t\t\t})\n\t\t}\n\t)\n\tflamincome.__register__(\n\t\t\"get-balance-of-erc20-by-symbol\",\n\t\t\"get erc20 balance\",\n\t\t(cmd) => {\n\t\t\tflamincome.__before__(() => {\n\t\t\t\tflamincome.__check_connection__()\n\t\t\t\tlet erc20 = flamincome.__get_erc20_by_symbol__(cmd[1])\n\t\t\t\tlet account = cmd[2]\n\t\t\t\tif (!account) {\n\t\t\t\t\taccount = flamincome.__account__\n\t\t\t\t}\n\t\t\t\tlet balanceOf = erc20.methods.balanceOf(account).call()\n\t\t\t\tlet decimals = erc20.methods.decimals().call()\n\t\t\t\tPromise.all([balanceOf, decimals])\n\t\t\t\t\t.then((vals) => {\n\t\t\t\t\t\tlet balanceOf = vals[0]\n\t\t\t\t\t\tlet decimals = parseInt(vals[1])\n\t\t\t\t\t\tbalanceOf = balanceOf.padStart(decimals, \"0\")\n\t\t\t\t\t\tlet position = balanceOf.length - decimals\n\t\t\t\t\t\tvar output = [\n\t\t\t\t\t\t\tbalanceOf.slice(0, position),\n\t\t\t\t\t\t\tbalanceOf.slice(position),\n\t\t\t\t\t\t].join(\".\")\n\t\t\t\t\t\tflamincome.__display__(output)\n\t\t\t\t\t\tflamincome.__done__()\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tflamincome.__display__(err.message)\n\t\t\t\t\t\tflamincome.__done__()\n\t\t\t\t\t})\n\t\t\t})\n\t\t}\n\t)\n\tflamincome.__register__(\n\t\t\"get-balance-of-erc20-by-address\",\n\t\t\"get erc20 balance\",\n\t\t(cmd) => {\n\t\t\tflamincome.__before__(() => {\n\t\t\t\tflamincome.__check_connection__()\n\t\t\t\tlet erc20 = new web3.eth.Contract(flamincome.__abi__.erc20, cmd[1])\n\t\t\t\tlet account = cmd[2]\n\t\t\t\tif (!account) {\n\t\t\t\t\taccount = flamincome.__account__\n\t\t\t\t}\n\t\t\t\tlet balanceOf = erc20.methods.balanceOf(account).call()\n\t\t\t\tlet decimals = erc20.methods.decimals().call()\n\t\t\t\tPromise.all([balanceOf, decimals])\n\t\t\t\t\t.then((vals) => {\n\t\t\t\t\t\tlet balanceOf = vals[0]\n\t\t\t\t\t\tlet decimals = parseInt(vals[1])\n\t\t\t\t\t\tbalanceOf = balanceOf.padStart(decimals, \"0\")\n\t\t\t\t\t\tlet position = balanceOf.length - decimals\n\t\t\t\t\t\tvar output = [\n\t\t\t\t\t\t\tbalanceOf.slice(0, position),\n\t\t\t\t\t\t\tbalanceOf.slice(position),\n\t\t\t\t\t\t].join(\".\")\n\t\t\t\t\t\tflamincome.__display__(output)\n\t\t\t\t\t\tflamincome.__done__()\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tflamincome.__display__(err.message)\n\t\t\t\t\t\tflamincome.__done__()\n\t\t\t\t\t})\n\t\t\t})\n\t\t}\n\t)\n\tflamincome.__register__(\n\t\t\"deposit-token-to-vault\",\n\t\t\"deposit token to mint ftoken\",\n\t\t(cmd) => {\n\t\t\tflamincome.__before__(() => {\n\t\t\t\tflamincome.__check_connection__()\n\t\t\t\tlet vault = flamincome.__get_vault_by_symbol__(cmd[1])\n\t\t\t\tlet erc20 = flamincome.__get_erc20_by_symbol__(cmd[1])\n\t\t\t\tlet amount = cmd[2]\n\t\t\t\tlet allowance = erc20.methods\n\t\t\t\t\t.allowance(flamincome.__account__, vault._address)\n\t\t\t\t\t.call()\n\t\t\t\tlet balanceOf = erc20.methods.balanceOf(flamincome.__account__).call()\n\t\t\t\tlet decimals = erc20.methods.decimals().call()\n\t\t\t\tPromise.all([balanceOf, decimals, allowance])\n\t\t\t\t\t.then((vals) => {\n\t\t\t\t\t\tlet num = vals[0]\n\t\t\t\t\t\tif (amount) {\n\t\t\t\t\t\t\tlet position = amount.indexOf(\".\")\n\t\t\t\t\t\t\tnum = amount.concat(\"0\".repeat(vals[1]))\n\t\t\t\t\t\t\tif (position >= 0) {\n\t\t\t\t\t\t\t\tlet l = amount.slice(0, position)\n\t\t\t\t\t\t\t\tlet r = amount\n\t\t\t\t\t\t\t\t\t.slice(position + 1)\n\t\t\t\t\t\t\t\t\t.padEnd(vals[1], \"0\")\n\t\t\t\t\t\t\t\t\t.slice(0, vals[1])\n\t\t\t\t\t\t\t\tnum = l + r\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnum = new web3.utils.BN(num)\n\t\t\t\t\t\tlet allowance = new web3.utils.BN(vals[2])\n\n\t\t\t\t\t\tif (allowance.cmp(num) == -1) {\n\t\t\t\t\t\t\tif (allowance > 0) {\n\t\t\t\t\t\t\t\tflamincome.__transaction__(\n\t\t\t\t\t\t\t\t\terc20.methods\n\t\t\t\t\t\t\t\t\t\t.approve(vault._address, 0)\n\t\t\t\t\t\t\t\t\t\t.send({ from: flamincome.__account__ }),\n\t\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\t\tflamincome.__transaction__(\n\t\t\t\t\t\t\t\t\t\t\terc20.methods\n\t\t\t\t\t\t\t\t\t\t\t\t.approve(\n\t\t\t\t\t\t\t\t\t\t\t\t\tvault._address,\n\t\t\t\t\t\t\t\t\t\t\t\t\tnew web3.utils.BN(2)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.pow(new web3.utils.BN(256))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.subn(1)\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t.send({ from: flamincome.__account__ }),\n\t\t\t\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\t\t\t\tflamincome.__transaction__(\n\t\t\t\t\t\t\t\t\t\t\t\t\tvault.methods\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.deposit(num)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.send({ from: flamincome.__account__ })\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tflamincome.__transaction__(\n\t\t\t\t\t\t\t\terc20.methods\n\t\t\t\t\t\t\t\t\t.approve(\n\t\t\t\t\t\t\t\t\t\tvault._address,\n\t\t\t\t\t\t\t\t\t\tnew web3.utils.BN(2).pow(new web3.utils.BN(256)).subn(1)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t.send({ from: flamincome.__account__ }),\n\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\tflamincome.__transaction__(\n\t\t\t\t\t\t\t\t\t\tvault.methods\n\t\t\t\t\t\t\t\t\t\t\t.deposit(num)\n\t\t\t\t\t\t\t\t\t\t\t.send({ from: flamincome.__account__ })\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\tflamincome.__transaction__(\n\t\t\t\t\t\t\tvault.methods.deposit(num).send({ from: flamincome.__account__ })\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tflamincome.__display__(err.message)\n\t\t\t\t\t\tflamincome.__done__()\n\t\t\t\t\t})\n\t\t\t})\n\t\t}\n\t)\n\tflamincome.__register__(\n\t\t\"withdraw-token-from-vault\",\n\t\t\"burn ftoken to withdraw token\",\n\t\t(cmd) => {\n\t\t\tflamincome.__before__(() => {\n\t\t\t\tflamincome.__check_connection__()\n\t\t\t\tlet vault = flamincome.__get_vault_by_symbol__(cmd[1])\n\t\t\t\tlet amount = cmd[2]\n\t\t\t\tlet balanceOf = vault.methods.balanceOf(flamincome.__account__).call()\n\t\t\t\tlet decimals = vault.methods.decimals().call()\n\t\t\t\tPromise.all([balanceOf, decimals])\n\t\t\t\t\t.then((vals) => {\n\t\t\t\t\t\tlet num = vals[0]\n\t\t\t\t\t\tif (amount) {\n\t\t\t\t\t\t\tlet position = amount.indexOf(\".\")\n\t\t\t\t\t\t\tnum = amount.concat(\"0\".repeat(vals[1]))\n\t\t\t\t\t\t\tif (position >= 0) {\n\t\t\t\t\t\t\t\tlet l = amount.slice(0, position)\n\t\t\t\t\t\t\t\tlet r = amount\n\t\t\t\t\t\t\t\t\t.slice(position + 1)\n\t\t\t\t\t\t\t\t\t.padEnd(vals[1], \"0\")\n\t\t\t\t\t\t\t\t\t.slice(0, vals[1])\n\t\t\t\t\t\t\t\tnum = l + r\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnum = new web3.utils.BN(num)\n\n\t\t\t\t\t\tflamincome.__transaction__(\n\t\t\t\t\t\t\tvault.methods.withdraw(num).send({ from: flamincome.__account__ })\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tflamincome.__display__(err.message)\n\t\t\t\t\t\tflamincome.__done__()\n\t\t\t\t\t})\n\t\t\t})\n\t\t}\n\t)\n\tflamincome.__register__(\n\t\t\"deposit-ftoken-to-ntoken\",\n\t\t\"deposit ftoken to mint ntoken\",\n\t\t(cmd) => {\n\t\t\tconst symbol = cmd[1] // token you input\n\t\t\tconst amount = cmd[2] // amount of ftoken you want to deposit\n\t\t\tflamincome.__before__(() => {\n\t\t\t\tflamincome.__check_connection__()\n\t\t\t\tconst nTokenContract = flamincome.__get_normalizer_by_symbol__(symbol)\n\t\t\t\tconst fTokenContract = flamincome.__get_vault_by_symbol__(symbol)\n\t\t\t\tlet allowance = fTokenContract.methods\n\t\t\t\t\t.allowance(flamincome.__account__, nTokenContract._address)\n\t\t\t\t\t.call()\n\t\t\t\tlet balanceOf = fTokenContract.methods\n\t\t\t\t\t.balanceOf(flamincome.__account__)\n\t\t\t\t\t.call()\n\t\t\t\tlet decimals = fTokenContract.methods.decimals().call()\n\t\t\t\tPromise.all([balanceOf, decimals, allowance])\n\t\t\t\t\t.then(async (vals) => {\n\t\t\t\t\t\tbalanceOf = vals[0]\n\t\t\t\t\t\tdecimals = vals[1]\n\t\t\t\t\t\tdecimals = Number(decimals)\n\t\t\t\t\t\tlet num = balanceOf\n\t\t\t\t\t\tif (amount) {\n\t\t\t\t\t\t\tconsole.log(`amount is ${amount}`)\n\t\t\t\t\t\t\tnum = decimalToInteger(amount, decimals)\n\t\t\t\t\t\t\tconsole.log(`decimal num is ${num}`)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnum = new web3.utils.BN(num)\n\t\t\t\t\t\tconsole.log(`num is ${num.toString()}`)\n\t\t\t\t\t\tallowance = new web3.utils.BN(vals[2])\n\t\t\t\t\t\tlet fTokenCalculate = await depositFTokenCalculate({\n\t\t\t\t\t\t\tamount: num,\n\t\t\t\t\t\t\tsymbol,\n\t\t\t\t\t\t\tdecimals,\n\t\t\t\t\t\t})\n\t\t\t\t\t\tfTokenCalculate = decimalToInteger(fTokenCalculate, decimals)\n\n\t\t\t\t\t\tif (allowance.cmp(num) === -1) {\n\t\t\t\t\t\t\tif (allowance > 0) {\n\t\t\t\t\t\t\t\tflamincome.__transaction__(\n\t\t\t\t\t\t\t\t\tfTokenContract.methods\n\t\t\t\t\t\t\t\t\t\t.approve(nTokenContract._address, 0)\n\t\t\t\t\t\t\t\t\t\t.send({ from: flamincome.__account__ }),\n\t\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\t\tflamincome.__transaction__(\n\t\t\t\t\t\t\t\t\t\t\tfTokenContract.methods\n\t\t\t\t\t\t\t\t\t\t\t\t.approve(\n\t\t\t\t\t\t\t\t\t\t\t\t\tnTokenContract._address,\n\t\t\t\t\t\t\t\t\t\t\t\t\tnew web3.utils.BN(2)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.pow(new web3.utils.BN(256))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.subn(1)\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t.send({ from: flamincome.__account__ }),\n\t\t\t\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\t\t\t\tflamincome.__transaction__(\n\t\t\t\t\t\t\t\t\t\t\t\t\tnTokenContract.methods\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.RealizeFToken(num, fTokenCalculate)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.send({ from: flamincome.__account__ })\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// else if you have not approve your ftoken\n\t\t\t\t\t\t\tflamincome.__transaction__(\n\t\t\t\t\t\t\t\tfTokenContract.methods\n\t\t\t\t\t\t\t\t\t.approve(\n\t\t\t\t\t\t\t\t\t\tnTokenContract._address,\n\t\t\t\t\t\t\t\t\t\tnew web3.utils.BN(2).pow(new web3.utils.BN(256)).subn(1)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t.send({ from: flamincome.__account__ }),\n\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\tflamincome.__transaction__(\n\t\t\t\t\t\t\t\t\t\tnTokenContract.methods\n\t\t\t\t\t\t\t\t\t\t\t.RealizeFToken(num, fTokenCalculate)\n\t\t\t\t\t\t\t\t\t\t\t.send({ from: flamincome.__account__ })\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// if you have approved enough ftoken of yours\n\t\t\t\t\t\tconsole.log(\"整活\")\n\t\t\t\t\t\tconsole.log(\"num toSting is\")\n\t\t\t\t\t\tconsole.log(num.toString())\n\t\t\t\t\t\tconsole.log(\"fTokenCalculate is\")\n\t\t\t\t\t\tconsole.log(fTokenCalculate.toString())\n\t\t\t\t\t\tflamincome.__transaction__(\n\t\t\t\t\t\t\tnTokenContract.methods\n\t\t\t\t\t\t\t\t.RealizeFToken(num, fTokenCalculate)\n\t\t\t\t\t\t\t\t.send({ from: flamincome.__account__ })\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tflamincome.__display__(err.message)\n\t\t\t\t\t\tflamincome.__done__()\n\t\t\t\t\t\tconsole.error(err)\n\t\t\t\t\t})\n\t\t\t})\n\t\t}\n\t)\n\tflamincome.__register__(\"wrap-eth-to-weth\", \"wrap ETH to WETH\", (cmd) => {\n\t\tflamincome.__before__(() => {\n\t\t\tflamincome.__check_connection__()\n\t\t\tlet weth = flamincome.__get_weth__()\n\t\t\tlet amount = cmd[1]\n\t\t\tif (!amount) {\n\t\t\t\tthrow { message: \"please specify the amount\" }\n\t\t\t}\n\t\t\tlet balance = web3.eth.getBalance(flamincome.__account__)\n\t\t\tPromise.all([balance])\n\t\t\t\t.then((vals) => {\n\t\t\t\t\tlet position = amount.indexOf(\".\")\n\t\t\t\t\tlet num = amount.concat(\"0\".repeat(18))\n\t\t\t\t\tif (position >= 0) {\n\t\t\t\t\t\tlet l = amount.slice(0, position)\n\t\t\t\t\t\tlet r = amount\n\t\t\t\t\t\t\t.slice(position + 1)\n\t\t\t\t\t\t\t.padEnd(18, \"0\")\n\t\t\t\t\t\t\t.slice(0, 18)\n\t\t\t\t\t\tnum = l + r\n\t\t\t\t\t}\n\t\t\t\t\tnum = new web3.utils.BN(num)\n\n\t\t\t\t\tflamincome.__transaction__(\n\t\t\t\t\t\tweth.methods\n\t\t\t\t\t\t\t.deposit()\n\t\t\t\t\t\t\t.send({ from: flamincome.__account__, value: num })\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tflamincome.__display__(err.message)\n\t\t\t\t\tflamincome.__done__()\n\t\t\t\t})\n\t\t})\n\t})\n\tflamincome.__register__(\"unwrap-weth-to-eth\", \"unwrap WETH to ETH\", (cmd) => {\n\t\tflamincome.__before__(() => {\n\t\t\tflamincome.__check_connection__()\n\t\t\tlet weth = flamincome.__get_weth__()\n\t\t\tlet amount = cmd[1]\n\t\t\tlet balanceOf = weth.methods.balanceOf(flamincome.__account__).call()\n\t\t\tPromise.all([balanceOf])\n\t\t\t\t.then((vals) => {\n\t\t\t\t\tlet num = vals[0]\n\t\t\t\t\tif (amount) {\n\t\t\t\t\t\tlet position = amount.indexOf(\".\")\n\t\t\t\t\t\tnum = amount.concat(\"0\".repeat(vals[1]))\n\t\t\t\t\t\tif (position >= 0) {\n\t\t\t\t\t\t\tlet l = amount.slice(0, position)\n\t\t\t\t\t\t\tlet r = amount\n\t\t\t\t\t\t\t\t.slice(position + 1)\n\t\t\t\t\t\t\t\t.padEnd(vals[1], \"0\")\n\t\t\t\t\t\t\t\t.slice(0, vals[1])\n\t\t\t\t\t\t\tnum = l + r\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tnum = new web3.utils.BN(num)\n\n\t\t\t\t\tflamincome.__transaction__(\n\t\t\t\t\t\tweth.methods.withdraw(num).send({ from: flamincome.__account__ })\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tflamincome.__display__(err.message)\n\t\t\t\t\tflamincome.__done__()\n\t\t\t\t})\n\t\t})\n\t})\n\tflamincome.__register__(\n\t\t\"withdrawall-ftoken-from-normalizer\",\n\t\t\"burn ntoken to withdraw ftoken\",\n\t\t(cmd) => {\n\t\t\tflamincome.__before__(() => {\n\t\t\t\tflamincome.__check_connection__()\n\t\t\t\tlet normalizer = flamincome.__get_normalizer_by_symbol__(cmd[1])\n\t\t\t\tlet f = normalizer.methods.f(flamincome.__account__).call()\n\t\t\t\tlet n = normalizer.methods.n(flamincome.__account__).call()\n\t\t\t\tlet balanceOf = normalizer.methods\n\t\t\t\t\t.balanceOf(flamincome.__account__)\n\t\t\t\t\t.call()\n\t\t\t\tPromise.all([f, n, balanceOf]).then((vals) => {\n\t\t\t\t\tlet f = new web3.utils.BN(vals[0])\n\t\t\t\t\tlet n = new web3.utils.BN(vals[1])\n\t\t\t\t\tlet balanceOf = new web3.utils.BN(vals[2])\n\t\t\t\t\tif (balanceOf.cmp(n) == -1) {\n\t\t\t\t\t\tflamincome.__display__(\"not enough balance\")\n\t\t\t\t\t\tflamincome.__done__()\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tflamincome.__transaction__(\n\t\t\t\t\t\tnormalizer.methods\n\t\t\t\t\t\t\t.UnrealizeFToken(f, n)\n\t\t\t\t\t\t\t.send({ from: flamincome.__account__ })\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t)\n\tflamincome.__register__(\n\t\t\"withdraw-ftoken-from-normalizer-as-raw\",\n\t\t\"burn ntoken to withdraw ftoken\",\n\t\t(cmd) => {\n\t\t\tflamincome.__before__(() => {\n\t\t\t\tflamincome.__check_connection__()\n\t\t\t\tlet normalizer = flamincome.__get_normalizer_by_symbol__(cmd[1])\n\t\t\t\tlet w = cmd[2]\n\t\t\t\tlet d = cmd[3]\n\t\t\t\tflamincome.__transaction__(\n\t\t\t\t\tnormalizer.methods\n\t\t\t\t\t\t.UnrealizeFToken(w, d)\n\t\t\t\t\t\t.send({ from: flamincome.__account__ })\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\t)\n})\n"],"sourceRoot":""}